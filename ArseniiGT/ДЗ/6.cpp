I часть:

1) Напишите программу, которая получает на вход количество товара и цену за единицу. Программа должна хранить в абстрактном типе данных стоимость товара с правами доступа private, также должно быть две процедуры с правами доступа public для вычисления и вывода значения стоимости.
Пример работы программы:

Введите цену товара:100.5
Введите количество товара:5
Total price:502.5


2) Напишите программу, которая будет переводит рубли в другую валюту. Программа должна запрашивать курс валюты и сумму в рублях (в отдельных строках), введенный курс должен быть умножен на 1.1 и храниться внутри абстрактного типа данных с правом доступа private, так же создайте функции-члены для установления курса и для получения значения курса с правами доступа public. Программа должна выводить значение в валюте с учетом курса.
Пример работы программы:
Введите курс:50
Введите сумму в рублях:100
Result:1.81818


3) Напишите программу, которая будет запрашивать количество товаров, стоимость каждого товара (в отдельных строках) и выводить сумму всех товаров.
Для хранения общей суммы покупки создайте абстрактный тип данных. Сумма покупки должна быть с правами доступа private, также создайте функции-члены для увеличения суммы покупки на цену введённого товара и функцию для получения значения хранимой общей суммы покупки, функции должны иметь права доступа public.
В результате работы программа должны вывести Total price:сумма
Пример работы программы:

Введите количество товаров:2
Введите цену 1 товара:100.3
Введите цену 2 товара:200.2
Total price:300.5


4) Напишите программу, которая будет хранить дату, выводить дату на экран, изменять дату. Создайте структуру для хранения даты, дата должна храниться с правами доступа private (число, месяц, год - целые числа). Создайте процедуры с правами доступа public: для установления даты, для вывода даты на экран в формате (число месяц прописью год), для изменения даты, для этого нужно запросить ввод количества дней, на которое нужно изменить дату (считайте, что в месяце 30 дней).
Пример работы программы:
Введите день:20
Введите месяц:12
Введите год:2000
Сколько дней добавить:15
5 январь 2001




II часть: 

1) Опишите класс point с тремя полями private (x,y,z,) и четырьмя методами public для задания значений полей и получения значений каждого из полей. Напишите программу, которая будет запрашивать ввод значений координат x,y,z (в отдельных строках), присваивать введенные значения полям объекта класса point и выводить значения полей в  формате: 
x=значение y=значение z=значение


2) Опишите класс  Figure с целочисленными полями width, height с доступом private, метод  setData, который присваивает полям значения, метод print, который выводит площадь прямоугольника в формате: “Площадь:значение”.


3) Напишите программу, которая будет запрашивать ввод значений длины и ширины прямоугольника с клавиатуры (в отдельных строках), заполнять поля класса и выводить с помощью метода print информацию о площади фигуры.
Опишите класс Total_price, создайте поле price и статическое поле max_price, создайте методы класса для установления значения поля price и метод, который проверяет, не превышает ли price максимально допустимое значение max_price. Если превышает, то присвоить price значение max_price. Напишите программу, которая будет запрашивать ввод значения с клавиатуры (double), записывать его в свойство прайс, инициализировать max_price значением 1000, вызывать метод проверки и выводить на экран значение поля price.

Пример работы программы:
Введите цену:1100 
1000


4) Напишите программу, которая будет переводить рубли в другую валюту. Программа должна запрашивать сумму в рублях и тип валюты (в отдельных строка, тип валюты - целое число от 1-3), опишите класс и создайте внутри класса три статических поля для хранения трех курсов валюты, также метод для перевода из рублей в валюту по выбранному курсу, метод должен получать в качестве параметров сумму в рублях и тип курса, возвращать сумму в соответствующей валюте. Инициализируйте их значениями курс 1= 60.5, курс 2= 35.8, курс 3=0.85. Результат выведите с точностью 2 знака после запятой.

Пример работы программы:
Введите сумму в рублях:100
Введите тип валюты (1-3):3
117.65


5) Создай класс Circle (окружность на плоскости). Создай поля x,y,R. Добавь метод set_center, который будет присваивать полям x, y значения, и метод set_radius, который будет присваивать значение атрибут R. Также добавь метод get_distance, который будет возвращать расстояние от начала координат до центра окружности, и get_area, который будет возвращать площадь круга, ограниченного данной окружностью.
Считай с клавиатуры 3 целых числа: x, y, R - каждое на отдельной строке и создай экземпляр класса Circle. Используя методы, задай полям значения, которые ты считал с клавиатуры. Используя методы, выведи площадь круга, ограниченного данной окружностью, и расстояние от начала координат до центра окружности с точностью до сотых на разных строках.
Входные данные:
Вводится 3 целых числа - каждое на новой строке.
Выходные данные:
Вводится площадь и расстояние, округленные до сотых на разных строках.


6) Напиши программу для расчета налога. Создай класс с статическим полем n, статическими методом setN (устанавливает значение n) и статическим методом getN (возвращает произведение ставки налога на облагаемую сумму).
Считай с клавиатуры ставку налога (правильная десятичная дробь), установи значение статического поля n равным введенному числу. Считай с клавиатуры сумму, облагаемую налогом. Создай объект класса, вызовите метод setN и выведите результат работы метода getN с точностью до двух знаков после запятой.
Входные данные:
Вводится два действительных числа - каждое на новой строке.
Выходные данные:
Действительное число, с точностью два знака после запятой.

Пример работы программы:
Введите ставку налога:0.13
Введите сумму:100
13.00




III часть: 

1) Опишите класс для хранения информации о сотруднике (поля fname, lname типа char[128], поле salary типа double c доступом private). Создайте конструктор класса, который инициирует объекты класса получаемыми значениями. Создайте метод класса, который возвращает значение поля salary объекта. Создайте метод класса для получения значения поля salary объекта. Создайте функцию average для вывода информации о средней зарплате. Создайте деструктор объектов класса.
Напишите программу, которая будет запрашивать ввод с клавиатуры (в отдельных строках) по очереди имя, фамилию, зарплату трех сотрудников, полученными данными инициировать объекты класса. Программа должна вызвать функцию average, которая выведет значение средней зарплаты (с точностью до двух знаков после запятой), функция average должна получать в качестве параметров значение полей salary трех объектов класса.

Для присвоения имени и фамилии текстового значения используйте функцию копирования строки strcpy(строка_в_которую_копируем, строка_из_которой_копируем) из <cstring>.
Пример работы программы:
Входные данные:
Иван
Иванов
10000
Петр
Петров
20000
Сергей
Сергеев
15000

Выходные параметры:
15000.00


2) Опишите класс для хранения информации о прямоугольнике (поля ширина и высота типа int c доступом private). Создайте конструктор класса, который инициирует объекты класса получаемыми значениями. Создайте метод класса, который возвращает значение площади прямоугольника. Создайте деструктор объектов класса.
Напишите программу, которая будет запрашивать ввод с клавиатуры (в отдельных строках) по очереди ширину и высоту двух прямоугольников, полученными данными инициировать объекты класса. Программа должна вывести на экран значение площади большого прямоугольника.

Пример работы программы:
Входные данные:
Ширина:2
Высота:3
Ширина:1
Высота:4
Выходные данные:
6


3) Опишите класс для хранения данных о точке (координаты x,y- поля private). Создайте конструктор класса, который принимает в качестве параметров координаты x,y и инициализирует полученными значениями поля, создайте конструктор по умолчанию, который инициализирует поля x,y значениями 0,0. Создайте метод класса, который возвращает расстояние от точки 0,0 до точки с указанными координатами. Создайте деструктор объектов класса.
Напишите программу, которая запрашивает ввод координат x,y с клавиатуры (в отдельных строках), создает объект класс и инициализирует его введенными данными. Программа должна вывести результат работы метода, который рассчитывает расстояние с точностью до 2 знаков после запятой.
Во второй строке создайте второй объект класса, инициализируйте его конструктором по умолчанию и выведите  результат работы метода, который рассчитывает расстояние с точностью до 2 знаков после запятой.

Пример работы программы:
Входные данные:
1
1

Выходные данные:
1.41
0.00


4) Опишите класс для хранения информации о студенте (поля fname, lname типа char[128], поле age типа int c доступом private). Создайте конструктор класса, который инициирует объекты класса получаемыми значениями. Создайте метод класса, который возвращает значение поля age объекта. Создайте метод print для вывода информации об объекте на экран в формате: "Имя Фамилия возраст лет". Создайте деструктор объектов класса.
Напишите программу, которая будет запрашивать с клавиатуры (в отдельных строках) по очереди имя, фамилию, возраст двух студентов, полученными данными инициировать объекты класса. Программа должна вызвать метод print  у объекта с наибольшим значением поля age (старшего студента).

Для присвоения полям имя и фамилия текстового значения используйте функцию копирования строки strcpy(строка_в_которую_копируем, строка_из_которой_копируем) из <cstring>.
Пример работы программы:
Входные данные:
Иван
Иванов
20
Петр
Петров
25
Выходные данные:
Петр Петров 25 лет


5) Опишите класс для хранения даты (день и год - целочисленные поля, месяц поле типа char[128], все поля private). В классе создайте два конструктора: конструктор, который принимает входные параметры и присваивает их значения полям, и конструктор по умолчанию (присваивает значение 01 январь 2000). Также в классе создайте метод для вывода полей на экран в формате: день месяц год. Создайте деструктор объектов класса.
Напишите программу, которая запрашивает ввод с клавиатуры день, месяц, год (в отдельных строках) и если год больше 2000, то вызывает конструктор с параметрами, а если нет- то вызывает конструктор по умолчанию.

Для присвоения месяцу текстового значения используйте функцию копирования строки strcpy(строка_в_которую_копируем, строка_из_которой_копируем) из <cstring>

Пример работы программы:
Входные данные:
20
март
2023

Выходные данные:
20 март 2023

Входные данные:
10
январь     
1995

Выходные данные:
1 январь 2000




IV часть:

1) Создайте класс Rectangle с полями width, height с доступом private. Создайте конструктор с аргументами, который инициирует поля переданными значениями аргументов. Создайте дружественную функцию  area, которая возвращает значение площади.
Напишите программу, которая запрашивает ввод с клавиатуры ширины и длины прямоугольника в отдельных строках, создает объект класса Rectangle и инициализирует его введенными значениями. Выведите на экран результат работы функции area.


2) Создайте класс Person с конструктором, который получает в качестве параметров значения char [] и int и инициализирует ими поля name (protected) и age (private). Создайте метод класса display, который выводит на экран информацию в формате:  "Имя: name Возраст: age”.
Создайте класс Employee, наследник класса Person. Создайте конструктор класса, который инициирует поле company(private) значением получаемого параметра. Создайте метод класса showEmployeeName, который будет выводить информацию о сотруднике в формате: "Имя: name Компания: company”.
Напишите программу, которая запрашивает ввод с клавиатуры (в отдельных строках) имени и возраста сотрудника. Создает объект класса Person, инициализирует его введенными с клавиатуры значениями и вызывает метод display. 
Далее в новых строках запрашивает ввод с клавиатуры имя, возраст, наименование компании. Создает объект класса Employee, инициализирует его введенными с клавиатуры значениями и вызывает метод  showEmployeeName.

Пример работы программы:
Входные данные:
Иван
25

Выходные данные:
Имя: Иван Возраст: 25

Входные данные:
Петр
34
SoftWare

Выходные данные:
Имя: Петр Компания: SoftWare


3) Создайте класс Average с полями double m_value, int count с доступом private. Создайте конструктор, который инициирует поля m_value, count нулями, создайте метод add, который увеличивает m_value на получаемый аргумент, count увеличивает на 1, создайте метод getValue, который возвращает частное m_value и count. 
Для класса Average создайте дружественную функцию Reset, которая присваивает m_value и  int count нули.
Напишите программу, которая создает объект класса Average, вызовите у объекта два раза метод add (с параметром 5 и с параметром 10). Выведите в отдельной строке результат вызова метода getValue. Вызовите функцию reset. Вызовите у объекта два раза метод add (с параметром 2 и с параметром 3). Выведите в отдельной строке результат вызова метода getValue. 


4) Создайте класс Rectangle с полями  width, height с доступом private. Создайте конструктор с аргументами, который инициирует поля переданными значениями аргументов. Создайте дружественный класс Area, для которого создайте метод getValue, который возвращает значение площади для объекта класса Rectangle.
Напишите программу, которая запрашивает ввод с клавиатуры ширины и длины прямоугольника в отдельных строках, создает объект класса Rectangle и инициализирует его введенными значениями. Создайте объект класса Area, выведите на экран результат работы метода getValue.


5) Создайте базовый класс Avto с защищенными полями char brand[128] и char name[128]. Создайте конструктор класса, который инициирует данные поля получаемыми параметрами.
Создайте класс Car- наследник класса Avto, с дополнительным полем speed с правами доступа private, создайте конструктор класса, который будет инициализировать поле speed получаемым параметром. Создайте метод класса info для вывода информации на экран в формате: “Марка:brand Модель: Скорость:speed”.
Напишите программу, которая будет запрашивать ввод с клавиатуры (в отдельных строках) значение марки, модели и скорости. Создайте объект класса Car, инициализируйте его введенными с клавиатуры значениями. Вызовите у объекта класса Car метод info.
